{"version":3,"sources":["App.js","api.service.ts","confDetails.js","customLogic.directive.ts","tile.js","confrence.js","route.js","serviceWorker.js","index.js"],"names":["App","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","ApiService","getDataFromApi","url","_confId","ajax","pipe","map","res","response","free","filter","_da","conference_id","_apiService","ConferenceDetails","_this","call","componentDidMount","match","params","id","subscribe","setState","_conferenceData","isLoading","state","length","react_router_dom","to","className","confName","entryType","city","country","confStartDate","CustomLogic","slice","_data","val","substr","removeExtra","_char","replace","RegExp","filterConferences","_key","cd","toLowerCase","indexOf","_customLogic","Tile","_name","name","_imageURL","image","_city","_date","date","style","_style","gridContainer","gridItem","card","src","width","alt","title","boxShadow","margin","textAlign","fontFamily","color","fontSize","height","display","gridGap","padding","backgroundColor","gridColumn","gridRow","Conference","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","status","_conference","_orginalData","stop","_ref2","_callee2","_keyText","_filteredData","_context2","sent","_x","_this2","_conferenceNumber","type","placeholder","onChange","text","target","index","tile","imageURL","Routes","react_router","path","exact","component","Boolean","window","location","hostname","Root","route","React","ReactDOM","render","src_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc997816.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport class App extends Component {\n \n  render(){\n    return(\n      <this.props.children />\n    );\n  }\n}\n\nexport default App;\n\n","import { Observable, throwError } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport { map  } from 'rxjs/operators';\n\nexport class ApiService  { \n\n  constructor(){\n  }\n  getDataFromApi = (url: any, _confId: number): Observable<any> => {\n    return ajax(url).pipe(\n      map(res => {\n        return _confId ? res.response.free.filter(\n          (_da:any) => _da.conference_id == _confId\n        ) : res;\n      })\n    )\n  }\n};\n\nexport default ApiService;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { ApiService } from './api.service.ts';\n\nconst _apiService = new ApiService(); \nexport class ConferenceDetails extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            _conferenceData:[],\n            isLoading: true\n        }\n    }\n    componentDidMount = () => {\n        _apiService.getDataFromApi(\n            \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\",\n             this.props.match.params.id\n        ).subscribe(\n            res => {\n                this.setState({\n                    _conferenceData: res,\n                    isLoading: false\n                })\n            }\n        )\n    }\n    render(){\n        if(this.state.isLoading){\n            return(\n                <center><h2>Loading...</h2></center>\n            )\n        }\n        if(!this.state._conferenceData.length){\n            return(\n                <center><h2>Opps Conference Not Found</h2></center>\n            )\n        }\n        return(\n            <div>\n                <Link to=\"/conf\"><h2>Conferences</h2></Link>\n                <div className=\"container\">\n                    <div className=\"row\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Key</th>\n                            <th>Value</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>ID</td>\n                            <td>{this.state._conferenceData[0].conference_id}</td>\n                        </tr>\n                        <tr>\n                            <td>Name</td>\n                            <td>{this.state._conferenceData[0].confName}</td>\n                        </tr>\n                        <tr>\n                            <td>Entry</td>\n                            <td>{this.state._conferenceData[0].entryType}</td>\n                        </tr>\n                        <tr>\n                            <td>Location</td>\n                            <td>{this.state._conferenceData[0].city}, {this.state._conferenceData[0].country}</td>\n                        </tr>\n                        <tr>\n                            <td>Date</td>\n                            <td>{this.state._conferenceData[0].confStartDate}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n} ;\n\nexport default ConferenceDetails;","export class CustomLogic {\n    slice = (_data: string, val: number): string => {return _data.length > val ? _data.substr(0, val - 3) + \"...\"  : _data };\n    removeExtra = (_data: string, _char: string): string => { return _data.replace(new RegExp(_char, \"g\"), \"\"); };\n    filterConferences = (_key: string, _data: any) => {return _data.filter( ((cd: any) => cd.confName.toLowerCase().indexOf(_key) > -1))};\n}\nexport default CustomLogic;","import React, { Component } from 'react';\nimport { CustomLogic } from \"./customLogic.directive.ts\";\nimport { Link } from \"react-router-dom\";\nconst _customLogic = new CustomLogic(); \nexport class Tile extends Component { \n    constructor(props) {\n        super(props)\n        this.state = {\n            _name: props.name,\n            _imageURL: props.image,\n            _city: props.city,\n            _date: props.date,\n            _key: props._key\n        }\n    }\n    render(){\n        return(\n                <div className=\"col-md-3\" style={_style.gridContainer} key={this.state._key} >\n                    <Link to={\"/details/\"+this.state._key}>\n                    <div style={_style.gridItem}>\n                    <div style={_style.card}>\n                        <img src={_customLogic.removeExtra(this.state._imageURL, '\"')}  style={_style.width} alt={this.state._name}/>\n                        <h1>{_customLogic.slice(this.state._name , 20)}</h1>\n                        <p style={_style.title}>{this.state._city}</p>\n                        <p>{this.state._date}</p>\n                        <div>\n                        </div>\n                    </div>\n                    </div>\n                    </Link>\n                </div>\n        );\n    }\n\n }\n const _style = {\n    card: {\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n    margin: \"auto\",\n    textAlign: \"center\",\n    fontFamily: \"arial\",\n  },\n  title: {\n    color: \"grey\",\n    fontSize: \"16px\",\n  },\n  width:{\n    width:\"100%\",\n    height: 300\n  },\n  gridContainer: {\n    display: 'grid',\n    gridGap: '10px',\n    padding: '10px'\n  },gridItem: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    textAlign: 'center',\n    padding: '20px',\n    gridColumn: \"1 / span 3\",\n    gridRow: 3\n  }\n  }\n  \nexport default Tile;","import React, { Component} from 'react';\nimport './App.css';\nimport ApiService from './api.service.ts';\nimport Tile from './tile.js';\nimport { CustomLogic } from \"./customLogic.directive.ts\";\nimport 'bootstrap/dist/css/bootstrap.css';\nclass Conference extends Component {\n  constructor(props){ \n    super(props)\n    this.state = {\n      _conference: []\n    }\n  }\n  componentDidMount = async () => {\n    let _api = new ApiService();\n    _api.getDataFromApi(\"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\", 0)\n      .subscribe(res => {\n        if(res.status === 200) {\n          this.setState({\n            _conference: res.response.free,\n            _orginalData: res.response.free\n          })\n        }\n      });\n\n  }\n\n  filterConferences = async (_keyText) => {\n    const _customLogic = new CustomLogic();\n    let _filteredData = await _customLogic.filterConferences(_keyText, this.state._orginalData)\n    this.setState({\n      _conference: _filteredData\n    })\n  }\n\n  render(){\n    let _conferenceNumber = this.state._conference;\n    if(!_conferenceNumber.length){\n      return(\n        <center><h2>Loading...</h2></center>\n      )\n    }\n    return(\n      <div className=\"container\">\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <input type=\"text\" placeholder=\"search...\" onChange ={((text) => {this.filterConferences(text.target.value)})} />\n            <label>({this.state._conference.length})</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          {\n            _conferenceNumber.map((val,index) => {\n              return(\n                <Tile name={val.confName} image={val.imageURL} date={val.confStartDate} city={val.city} _key={val.conference_id} key={val.conference_id}> </Tile>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Conference;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport App from './App';\nimport ConferenceDetails from './confDetails';\nimport Conference from './confrence';\n\nexport class Routes extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <Route path=\"/\" exact component={App} >\n                        <Route path=\"/\" exact component={Conference} />\n                        <Route path=\"/conf/\" component={Conference} />\n                        <Route path=\"/details/:id\" component={ConferenceDetails} />\n                    </Route>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Routes;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './route'\nimport * as serviceWorker from './serviceWorker';\n\nclass Root extends React.Component {\n    render(){\n        return (\n            <Routes />\n        )\n    }\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}